[{"/Users/abdulrehman/Desktop/capstone/client/src/index.js":"1","/Users/abdulrehman/Desktop/capstone/client/src/App.js":"2","/Users/abdulrehman/Desktop/capstone/client/src/reportWebVitals.js":"3","/Users/abdulrehman/Desktop/capstone/client/src/Auth.js":"4","/Users/abdulrehman/Desktop/capstone/client/src/Components/Home.js":"5","/Users/abdulrehman/Desktop/capstone/client/src/Components/PrivateRoute.js":"6","/Users/abdulrehman/Desktop/capstone/client/src/firebase.js":"7","/Users/abdulrehman/Desktop/capstone/client/src/Components/SignUp.js":"8","/Users/abdulrehman/Desktop/capstone/client/src/Components/Login.js":"9","/Users/abdulrehman/Desktop/capstone/client/src/Components/Header/Header.js":"10","/Users/abdulrehman/Desktop/capstone/client/src/Components/ManualInput/ManualInput.js":"11","/Users/abdulrehman/Desktop/capstone/client/src/Components/Receipt/Receipt.js":"12","/Users/abdulrehman/Desktop/capstone/client/src/Components/Dashboard.js":"13","/Users/abdulrehman/Desktop/capstone/client/src/Components/Tesseract/Tesseract.js":"14","/Users/abdulrehman/Desktop/capstone/client/src/Components/Expense/Expense.js":"15","/Users/abdulrehman/Desktop/capstone/client/src/Components/Goal/Goal.js":"16"},{"size":500,"mtime":1607905162061,"results":"17","hashOfConfig":"18"},{"size":879,"mtime":1608178707967,"results":"19","hashOfConfig":"18"},{"size":362,"mtime":1607905162062,"results":"20","hashOfConfig":"18"},{"size":607,"mtime":1607911684011,"results":"21","hashOfConfig":"18"},{"size":2851,"mtime":1608179044490,"results":"22","hashOfConfig":"18"},{"size":499,"mtime":1607912142493,"results":"23","hashOfConfig":"18"},{"size":484,"mtime":1608016512016,"results":"24","hashOfConfig":"18"},{"size":1230,"mtime":1608174079412,"results":"25","hashOfConfig":"18"},{"size":1699,"mtime":1608173715264,"results":"26","hashOfConfig":"18"},{"size":1393,"mtime":1608178796816,"results":"27","hashOfConfig":"18"},{"size":2443,"mtime":1608181920158,"results":"28","hashOfConfig":"18"},{"size":4667,"mtime":1608177797129,"results":"29","hashOfConfig":"18"},{"size":1368,"mtime":1608179578525,"results":"30","hashOfConfig":"18"},{"size":1541,"mtime":1608179367655,"results":"31","hashOfConfig":"18"},{"size":1834,"mtime":1608180830871,"results":"32","hashOfConfig":"18"},{"size":5217,"mtime":1608181003189,"results":"33","hashOfConfig":"18"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},"1qu3onj",{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"67","usedDeprecatedRules":"36"},"/Users/abdulrehman/Desktop/capstone/client/src/index.js",[],["68","69"],"/Users/abdulrehman/Desktop/capstone/client/src/App.js",[],"/Users/abdulrehman/Desktop/capstone/client/src/reportWebVitals.js",[],"/Users/abdulrehman/Desktop/capstone/client/src/Auth.js",[],"/Users/abdulrehman/Desktop/capstone/client/src/Components/Home.js",[],"/Users/abdulrehman/Desktop/capstone/client/src/Components/PrivateRoute.js",[],"/Users/abdulrehman/Desktop/capstone/client/src/firebase.js",[],"/Users/abdulrehman/Desktop/capstone/client/src/Components/SignUp.js",[],"/Users/abdulrehman/Desktop/capstone/client/src/Components/Login.js",[],"/Users/abdulrehman/Desktop/capstone/client/src/Components/Header/Header.js",[],"/Users/abdulrehman/Desktop/capstone/client/src/Components/ManualInput/ManualInput.js",[],"/Users/abdulrehman/Desktop/capstone/client/src/Components/Receipt/Receipt.js",[],"/Users/abdulrehman/Desktop/capstone/client/src/Components/Dashboard.js",[],"/Users/abdulrehman/Desktop/capstone/client/src/Components/Tesseract/Tesseract.js",[],"/Users/abdulrehman/Desktop/capstone/client/src/Components/Expense/Expense.js",[],"/Users/abdulrehman/Desktop/capstone/client/src/Components/Goal/Goal.js",["70"],"import axios from 'axios'\nimport React, { Component } from 'react'\nimport moment from 'moment'\nimport './Goal.scss'\n\nclass Goal extends Component {\n  state = {\n    // Initially, no file is selected\n    startDate: '',\n    endDate: '',\n    total: '',\n    updateBudget: false,\n    spent: '',\n  }\n\n  componentDidMount() {\n    axios.get('http://localhost:8080/goal').then((res) => {\n      this.setState({\n        startDate: res.data.startDate,\n        endDate: res.data.endDate,\n        total: res.data.total,\n      })\n    })\n\n    axios.get('http://localhost:8080/tesseract').then((res) => {\n      this.setState({\n        spent: res.data,\n      })\n    })\n  }\n\n  // getting the date from the user\n  onDateChange = (event) => {\n    //update the state\n    this.setState({ startDate: event.target.value })\n  }\n\n  // getting the firstWord from the user\n  onExpenseChange = (event) => {\n    //update the state\n    this.setState({ total: event.target.value })\n  }\n  // getting the lastWord from the user\n  onEndDate = (event) => {\n    //update the state\n    this.setState({ endDate: event.target.value })\n  }\n\n  axiosPost = (event) => {\n    event.preventDefault()\n    this.setState({ updateBudget: false })\n    axios.post('http://localhost:8080/goal', this.state)\n    window.location.reload()\n  }\n  showUpdate = () => {\n    this.setState({ updateBudget: true })\n  }\n\n  render() {\n    let CurrentDate = moment().unix()\n    let start = moment(this.state.startDate, 'MM-DD-YYYY').unix()\n    let end = moment(this.state.endDate, 'MM-DD-YYYY').unix()\n    let days = (end - CurrentDate) / 86400\n\n    if (!this.props.isVisible) {\n      return null\n    } else if (this.state.total === '' || this.state.total === undefined) {\n      return (\n        <div>\n          <form action='' className='expense'>\n            <h1>Lets set a budget!</h1>\n            <label htmlFor='date' className='label'>\n              Start Date\n            </label>\n            <input\n              type='text'\n              name='date'\n              id='date'\n              placeholder='mm/dd/yyyy'\n              onChange={this.onDateChange}\n              value={this.state.startDate}\n              className='label__input'\n            />\n            <label htmlFor='date' className='label'>\n              End Date\n            </label>\n            <input\n              type='text'\n              name='date'\n              id='date'\n              placeholder='mm/dd/yyyy'\n              onChange={this.onEndDate}\n              value={this.state.endDate}\n              className='label__input'\n            />\n            <label htmlFor='expense' className='label'>\n              Amount\n            </label>\n            <input\n              type='text'\n              name='expense'\n              id='expense'\n              placeholder='budget amount'\n              onChange={this.onExpenseChange}\n              value={this.state.total}\n              className='label__input'\n            />\n            <button onClick={this.axiosPost} className='button__login'>\n              Submit\n            </button>\n          </form>\n        </div>\n      )\n    } else if (this.state.updateBudget) {\n      return (\n        <div className='expense'>\n          <form action='' className='manual'>\n            <h1>Lets set a budget!</h1>\n            <label htmlFor='date' className='label'>\n              Start Date\n            </label>\n            <input\n              type='text'\n              name='date'\n              id='date'\n              placeholder={this.state.startDate}\n              onChange={this.onDateChange}\n              value={this.state.startDate}\n              className='label__input'\n            />\n            <label htmlFor='date' className='label'>\n              End Date\n            </label>\n            <input\n              type='text'\n              name='date'\n              id='date'\n              placeholder={this.state.endDate}\n              onChange={this.onEndDate}\n              value={this.state.endDate}\n              className='label__input'\n            />\n            <label htmlFor='expense' className='label'>\n              Amount\n            </label>\n            <input\n              type='text'\n              name='expense'\n              id='expense'\n              placeholder={this.state.total}\n              onChange={this.onExpenseChange}\n              value={this.state.total}\n              className='label__input'\n            />\n            <button onClick={this.axiosPost} className='button__login'>\n              Submit\n            </button>\n          </form>\n        </div>\n      )\n    } else {\n      return (\n        <div className='goal'>\n          <p>\n            You have budgeted {this.state.total} for your budget from{' '}\n            {this.state.startDate} to {this.state.endDate}{' '}\n          </p>\n          <p>\n            You have spent {this.state.spent} this much from{' '}\n            {this.state.startDate} to {this.state.endDate}{' '}\n          </p>\n\n          <p>You have {days} days left until your budget is done</p>\n\n          <button onClick={this.showUpdate} className='button__goal'>\n            Update Budget?\n          </button>\n          <p></p>\n        </div>\n      )\n    }\n  }\n}\n\nexport default Goal\n",{"ruleId":"71","replacedBy":"72"},{"ruleId":"73","replacedBy":"74"},{"ruleId":"75","severity":1,"message":"76","line":61,"column":9,"nodeType":"77","messageId":"78","endLine":61,"endColumn":14},"no-native-reassign",["79"],"no-negated-in-lhs",["80"],"no-unused-vars","'start' is assigned a value but never used.","Identifier","unusedVar","no-global-assign","no-unsafe-negation"]