{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/abdulrehman/Desktop/capstone/client/src/Components/Tesseract/Tesseract.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport { createWorker } from 'tesseract.js';\nimport axios from 'axios';\nimport './Tesseract.scss';\n\nfunction Tesseract({\n  isVisible,\n  URL,\n  date,\n  firstItem,\n  lastItem,\n  run\n}) {\n  _s();\n\n  if (!run) {\n    const worker = createWorker({\n      logger: m => console.log(m)\n    });\n\n    const doOCR = async () => {\n      await worker.load();\n      await worker.loadLanguage('eng');\n      await worker.initialize('eng');\n      const {\n        data: {\n          text\n        }\n      } = await worker.recognize(URL);\n      setOcr(text);\n    };\n\n    const [ocr, setOcr] = useState('Recognizing...');\n    useEffect(() => {\n      doOCR();\n    });\n\n    const getApi = () => {\n      axios.post('http://localhost:8080/tesseract', {\n        date: date,\n        item: firstItem,\n        last: lastItem,\n        text: ocr\n      });\n    };\n  }\n\n  console.log(ocr);\n  console.log('this is a string');\n\n  if (isVisible) {\n    return null;\n  } else {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"tesseract\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: ocr\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: getApi,\n        children: \"Click me\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this);\n  }\n}\n\n_s(Tesseract, \"wC2lgUhOs1inAMGMoDOFIxAb+lI=\");\n\n_c = Tesseract;\nexport default Tesseract;\n\nvar _c;\n\n$RefreshReg$(_c, \"Tesseract\");","map":{"version":3,"sources":["/Users/abdulrehman/Desktop/capstone/client/src/Components/Tesseract/Tesseract.js"],"names":["React","useEffect","useState","createWorker","axios","Tesseract","isVisible","URL","date","firstItem","lastItem","run","worker","logger","m","console","log","doOCR","load","loadLanguage","initialize","data","text","recognize","setOcr","ocr","getApi","post","item","last"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,SAASC,YAAT,QAA6B,cAA7B;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAO,kBAAP;;AAEA,SAASC,SAAT,CAAmB;AAAEC,EAAAA,SAAF;AAAaC,EAAAA,GAAb;AAAkBC,EAAAA,IAAlB;AAAwBC,EAAAA,SAAxB;AAAmCC,EAAAA,QAAnC;AAA6CC,EAAAA;AAA7C,CAAnB,EAAuE;AAAA;;AACrE,MAAI,CAACA,GAAL,EAAU;AACR,UAAMC,MAAM,GAAGT,YAAY,CAAC;AAC1BU,MAAAA,MAAM,EAAGC,CAAD,IAAOC,OAAO,CAACC,GAAR,CAAYF,CAAZ;AADW,KAAD,CAA3B;;AAGA,UAAMG,KAAK,GAAG,YAAY;AACxB,YAAML,MAAM,CAACM,IAAP,EAAN;AACA,YAAMN,MAAM,CAACO,YAAP,CAAoB,KAApB,CAAN;AACA,YAAMP,MAAM,CAACQ,UAAP,CAAkB,KAAlB,CAAN;AACA,YAAM;AACJC,QAAAA,IAAI,EAAE;AAAEC,UAAAA;AAAF;AADF,UAEF,MAAMV,MAAM,CAACW,SAAP,CAAiBhB,GAAjB,CAFV;AAGAiB,MAAAA,MAAM,CAACF,IAAD,CAAN;AACD,KARD;;AASA,UAAM,CAACG,GAAD,EAAMD,MAAN,IAAgBtB,QAAQ,CAAC,gBAAD,CAA9B;AACAD,IAAAA,SAAS,CAAC,MAAM;AACdgB,MAAAA,KAAK;AACN,KAFQ,CAAT;;AAGA,UAAMS,MAAM,GAAG,MAAM;AACnBtB,MAAAA,KAAK,CAACuB,IAAN,CAAW,iCAAX,EAA8C;AAC5CnB,QAAAA,IAAI,EAAEA,IADsC;AAE5CoB,QAAAA,IAAI,EAAEnB,SAFsC;AAG5CoB,QAAAA,IAAI,EAAEnB,QAHsC;AAI5CY,QAAAA,IAAI,EAAEG;AAJsC,OAA9C;AAMD,KAPD;AAQD;;AAEDV,EAAAA,OAAO,CAACC,GAAR,CAAYS,GAAZ;AACAV,EAAAA,OAAO,CAACC,GAAR,CAAY,kBAAZ;;AACA,MAAIV,SAAJ,EAAe;AACb,WAAO,IAAP;AACD,GAFD,MAEO;AACL,wBACE;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA,8BACE;AAAA,kBAAImB;AAAJ;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAQ,QAAA,OAAO,EAAEC,MAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AAMD;AACF;;GAxCQrB,S;;KAAAA,S;AA0CT,eAAeA,SAAf","sourcesContent":["import React, { useEffect, useState } from 'react'\nimport { createWorker } from 'tesseract.js'\nimport axios from 'axios'\nimport './Tesseract.scss'\n\nfunction Tesseract({ isVisible, URL, date, firstItem, lastItem, run }) {\n  if (!run) {\n    const worker = createWorker({\n      logger: (m) => console.log(m),\n    })\n    const doOCR = async () => {\n      await worker.load()\n      await worker.loadLanguage('eng')\n      await worker.initialize('eng')\n      const {\n        data: { text },\n      } = await worker.recognize(URL)\n      setOcr(text)\n    }\n    const [ocr, setOcr] = useState('Recognizing...')\n    useEffect(() => {\n      doOCR()\n    })\n    const getApi = () => {\n      axios.post('http://localhost:8080/tesseract', {\n        date: date,\n        item: firstItem,\n        last: lastItem,\n        text: ocr,\n      })\n    }\n  }\n\n  console.log(ocr)\n  console.log('this is a string')\n  if (isVisible) {\n    return null\n  } else {\n    return (\n      <div className='tesseract'>\n        <p>{ocr}</p>\n        <button onClick={getApi}>Click me</button>\n      </div>\n    )\n  }\n}\n\nexport default Tesseract\n"]},"metadata":{},"sourceType":"module"}