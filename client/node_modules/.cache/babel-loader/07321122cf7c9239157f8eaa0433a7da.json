{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/abdulrehman/Desktop/capstone/client/src/Components/Tesseract/Tesseract.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport { createWorker } from 'tesseract.js';\nimport axios from 'axios';\nimport './Tesseract.scss';\n\nfunction Tesseract({\n  isVisible,\n  URL,\n  date,\n  firstItem,\n  lastItem\n}) {\n  _s();\n\n  const worker = createWorker({\n    logger: m => console.log(m)\n  });\n\n  const doOCR = async () => {\n    await worker.load();\n    await worker.loadLanguage('eng');\n    await worker.initialize('eng');\n    const {\n      data: {\n        text\n      }\n    } = await worker.recognize(URL);\n    setOcr(text);\n  };\n\n  const [ocr, setOcr] = useState('Recognizing...');\n  useEffect(() => {\n    doOCR();\n  });\n\n  const getApi = () => {\n    axios.post('http://localhost:8080/tesseract', {\n      date: date,\n      item: firstItem,\n      last: lastItem,\n      text: ocr\n    });\n  };\n\n  console.log(ocr);\n  console.log('this is a string');\n\n  if (isVisible) {\n    return null;\n  } else {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"tesseract\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: ocr\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: getApi,\n        children: \"Click me\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this);\n  }\n}\n\n_s(Tesseract, \"wC2lgUhOs1inAMGMoDOFIxAb+lI=\");\n\n_c = Tesseract;\nexport default Tesseract;\n\nvar _c;\n\n$RefreshReg$(_c, \"Tesseract\");","map":{"version":3,"sources":["/Users/abdulrehman/Desktop/capstone/client/src/Components/Tesseract/Tesseract.js"],"names":["React","useEffect","useState","createWorker","axios","Tesseract","isVisible","URL","date","firstItem","lastItem","worker","logger","m","console","log","doOCR","load","loadLanguage","initialize","data","text","recognize","setOcr","ocr","getApi","post","item","last"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,SAASC,YAAT,QAA6B,cAA7B;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAO,kBAAP;;AAEA,SAASC,SAAT,CAAmB;AAAEC,EAAAA,SAAF;AAAaC,EAAAA,GAAb;AAAkBC,EAAAA,IAAlB;AAAwBC,EAAAA,SAAxB;AAAmCC,EAAAA;AAAnC,CAAnB,EAAkE;AAAA;;AAChE,QAAMC,MAAM,GAAGR,YAAY,CAAC;AAC1BS,IAAAA,MAAM,EAAGC,CAAD,IAAOC,OAAO,CAACC,GAAR,CAAYF,CAAZ;AADW,GAAD,CAA3B;;AAGA,QAAMG,KAAK,GAAG,YAAY;AACxB,UAAML,MAAM,CAACM,IAAP,EAAN;AACA,UAAMN,MAAM,CAACO,YAAP,CAAoB,KAApB,CAAN;AACA,UAAMP,MAAM,CAACQ,UAAP,CAAkB,KAAlB,CAAN;AACA,UAAM;AACJC,MAAAA,IAAI,EAAE;AAAEC,QAAAA;AAAF;AADF,QAEF,MAAMV,MAAM,CAACW,SAAP,CAAiBf,GAAjB,CAFV;AAGAgB,IAAAA,MAAM,CAACF,IAAD,CAAN;AACD,GARD;;AASA,QAAM,CAACG,GAAD,EAAMD,MAAN,IAAgBrB,QAAQ,CAAC,gBAAD,CAA9B;AACAD,EAAAA,SAAS,CAAC,MAAM;AACde,IAAAA,KAAK;AACN,GAFQ,CAAT;;AAGA,QAAMS,MAAM,GAAG,MAAM;AACnBrB,IAAAA,KAAK,CAACsB,IAAN,CAAW,iCAAX,EAA8C;AAC5ClB,MAAAA,IAAI,EAAEA,IADsC;AAE5CmB,MAAAA,IAAI,EAAElB,SAFsC;AAG5CmB,MAAAA,IAAI,EAAElB,QAHsC;AAI5CW,MAAAA,IAAI,EAAEG;AAJsC,KAA9C;AAMD,GAPD;;AASAV,EAAAA,OAAO,CAACC,GAAR,CAAYS,GAAZ;AACAV,EAAAA,OAAO,CAACC,GAAR,CAAY,kBAAZ;;AACA,MAAIT,SAAJ,EAAe;AACb,WAAO,IAAP;AACD,GAFD,MAEO;AACL,wBACE;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA,8BACE;AAAA,kBAAIkB;AAAJ;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAQ,QAAA,OAAO,EAAEC,MAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AAMD;AACF;;GAtCQpB,S;;KAAAA,S;AAwCT,eAAeA,SAAf","sourcesContent":["import React, { useEffect, useState } from 'react'\nimport { createWorker } from 'tesseract.js'\nimport axios from 'axios'\nimport './Tesseract.scss'\n\nfunction Tesseract({ isVisible, URL, date, firstItem, lastItem }) {\n  const worker = createWorker({\n    logger: (m) => console.log(m),\n  })\n  const doOCR = async () => {\n    await worker.load()\n    await worker.loadLanguage('eng')\n    await worker.initialize('eng')\n    const {\n      data: { text },\n    } = await worker.recognize(URL)\n    setOcr(text)\n  }\n  const [ocr, setOcr] = useState('Recognizing...')\n  useEffect(() => {\n    doOCR()\n  })\n  const getApi = () => {\n    axios.post('http://localhost:8080/tesseract', {\n      date: date,\n      item: firstItem,\n      last: lastItem,\n      text: ocr,\n    })\n  }\n\n  console.log(ocr)\n  console.log('this is a string')\n  if (isVisible) {\n    return null\n  } else {\n    return (\n      <div className='tesseract'>\n        <p>{ocr}</p>\n        <button onClick={getApi}>Click me</button>\n      </div>\n    )\n  }\n}\n\nexport default Tesseract\n"]},"metadata":{},"sourceType":"module"}