{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/abdulrehman/Desktop/capstone/client/src/Components/Receipt/Receipt.js\";\nimport axios from 'axios';\nimport React, { Component } from 'react';\nimport app from '../../firebase.js';\n\nclass App extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      // Initially, no file is selected\n      selectedFile: null,\n      ulink: null\n    };\n\n    this.onFileChange = event => {\n      // Update the state\n      this.setState({\n        selectedFile: event.target.files[0]\n      });\n    };\n\n    this.onFileUpload = () => {\n      // Create an object of formData\n      const formData = new FormData(); // Update the formData object\n\n      formData.append('myFile', this.state.selectedFile, this.state.selectedFile.name); // Details of the uploaded file\n\n      console.log(this.state.selectedFile); // Request made to the backend api\n      // Send formData object\n\n      axios.post('api/uploadfile', formData); // Get File\n\n      let file = document.getElementById('image').files[0]; // Create a storage ref\n\n      let storageRef = app.storage().ref('images/' + file.name); //Upload file\n\n      let task = storageRef.put(file); // get the URL\n\n      task.then(snapshot => snapshot.ref.getDownloadURL()).then(url => this.setState({\n        ulink: url\n      }));\n      this.props.setURL(this.state.ulink);\n    };\n\n    this.fileData = () => {\n      if (this.state.selectedFile) {\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            children: \"File Details:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"File Name: \", this.state.selectedFile.name]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"File Type: \", this.state.selectedFile.type]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Last Modified:\", ' ', this.state.selectedFile.lastModifiedDate.toDateString()]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 9\n        }, this);\n      } else {\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n            children: \"Choose before Pressing the Upload button\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 9\n        }, this);\n      }\n    };\n\n    this.fileImage = () => {\n      if (this.state.ulink) {\n        return /*#__PURE__*/_jsxDEV(\"img\", {\n          src: this.state.ulink,\n          alt: \"upload\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 14\n        }, this);\n      }\n    };\n  }\n\n  render() {\n    console.log(this.state.ulink);\n\n    if (!this.props.isVisible) {\n      return null;\n    } else {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"file\",\n            id: \"image\",\n            onChange: this.onFileChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 97,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: this.onFileUpload,\n            children: \"Upload!\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 98,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 11\n        }, this), this.fileData(), this.fileImage()]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 9\n      }, this);\n    }\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/abdulrehman/Desktop/capstone/client/src/Components/Receipt/Receipt.js"],"names":["axios","React","Component","app","App","state","selectedFile","ulink","onFileChange","event","setState","target","files","onFileUpload","formData","FormData","append","name","console","log","post","file","document","getElementById","storageRef","storage","ref","task","put","then","snapshot","getDownloadURL","url","props","setURL","fileData","type","lastModifiedDate","toDateString","fileImage","render","isVisible"],"mappings":"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","sourcesContent":["import axios from 'axios'\nimport React, { Component } from 'react'\nimport app from '../../firebase.js'\n\nclass App extends Component {\n  state = {\n    // Initially, no file is selected\n    selectedFile: null,\n    ulink: null,\n  }\n\n  // On file select (from the pop up)\n  onFileChange = (event) => {\n    // Update the state\n    this.setState({ selectedFile: event.target.files[0] })\n  }\n\n  // On file upload (click the upload button)\n  onFileUpload = () => {\n    // Create an object of formData\n    const formData = new FormData()\n\n    // Update the formData object\n    formData.append(\n      'myFile',\n      this.state.selectedFile,\n      this.state.selectedFile.name\n    )\n\n    // Details of the uploaded file\n    console.log(this.state.selectedFile)\n\n    // Request made to the backend api\n    // Send formData object\n    axios.post('api/uploadfile', formData)\n\n    // Get File\n    let file = document.getElementById('image').files[0]\n\n    // Create a storage ref\n\n    let storageRef = app.storage().ref('images/' + file.name)\n\n    //Upload file\n\n    let task = storageRef.put(file)\n\n    // get the URL\n    task\n      .then((snapshot) => snapshot.ref.getDownloadURL())\n      .then((url) => this.setState({ ulink: url }))\n\n    this.props.setURL(this.state.ulink)\n  }\n\n  // passing back the url to the parent\n\n  // File content to be displayed after\n  // file upload is complete\n  fileData = () => {\n    if (this.state.selectedFile) {\n      return (\n        <div>\n          <h2>File Details:</h2>\n          <p>File Name: {this.state.selectedFile.name}</p>\n          <p>File Type: {this.state.selectedFile.type}</p>\n          <p>\n            Last Modified:{' '}\n            {this.state.selectedFile.lastModifiedDate.toDateString()}\n          </p>\n        </div>\n      )\n    } else {\n      return (\n        <div>\n          <br />\n          <h4>Choose before Pressing the Upload button</h4>\n        </div>\n      )\n    }\n  }\n  // upload image if url is existent\n  fileImage = () => {\n    if (this.state.ulink) {\n      return <img src={this.state.ulink} alt='upload' />\n    }\n  }\n\n  render() {\n    console.log(this.state.ulink)\n    if (!this.props.isVisible) {\n      return null\n    } else {\n      return (\n        <div>\n          <div>\n            <input type='file' id='image' onChange={this.onFileChange} />\n            <button onClick={this.onFileUpload}>Upload!</button>\n          </div>\n          {this.fileData()}\n          {this.fileImage()}\n        </div>\n      )\n    }\n  }\n}\n\nexport default App\n"]},"metadata":{},"sourceType":"module"}