{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/abdulrehman/Desktop/capstone/client/src/Components/Receipt/Receipt.js\";\nimport React, { Component } from 'react';\nimport app from '../../firebase.js';\n\nclass App extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      // Initially, no file is selected\n      selectedFile: null,\n      ulink: null,\n      date: '',\n      firstWord: '',\n      lastWord: '',\n      input: false\n    };\n\n    this.onFileChange = event => {\n      // Update the state\n      this.setState({\n        selectedFile: event.target.files[0]\n      });\n    };\n\n    this.onDateChange = event => {\n      //update the state\n      this.setState({\n        date: event.target.value\n      });\n    };\n\n    this.onWordChange = event => {\n      //update the state\n      this.setState({\n        firstWord: event.target.value\n      });\n    };\n\n    this.onLastChange = event => {\n      //update the state\n      this.setState({\n        lastWord: event.target.value\n      });\n    };\n\n    this.onFileUpload = () => {\n      this.setState({\n        input: true\n      }); // Create an object of formData\n\n      const formData = new FormData(); // Update the formData object\n\n      formData.append('myFile', this.state.selectedFile, this.state.selectedFile.name); // Details of the uploaded file\n\n      console.log(this.state.selectedFile); // Get File\n\n      let file = document.getElementById('image').files[0]; // Create a storage ref\n\n      let storageRef = app.storage().ref('images/' + file.name); //Upload file\n\n      let task = storageRef.put(file); // get the URL\n\n      task.then(snapshot => snapshot.ref.getDownloadURL()).then(url => this.setState({\n        ulink: url\n      }, // passing back the url to the parent\n      this.props.setURL(url)));\n    };\n\n    this.fileData = () => {\n      if (this.state.selectedFile) {\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            children: \"File Details:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 86,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"File Name: \", this.state.selectedFile.name]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 87,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"File Type: \", this.state.selectedFile.type]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 88,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Last Modified:\", ' ', this.state.selectedFile.lastModifiedDate.toDateString()]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 89,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 9\n        }, this);\n      } else {\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 98,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n            children: \"Choose before Pressing the Upload button\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 99,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 9\n        }, this);\n      }\n    };\n\n    this.fileImage = () => {\n      // rendering picture if it exists\n      if (this.state.ulink) {\n        return /*#__PURE__*/_jsxDEV(\"img\", {\n          src: this.state.ulink,\n          alt: \"upload\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 14\n        }, this);\n      }\n    };\n\n    this.enterInfo = event => {\n      event.preventDefault();\n      this.props.setItem(this.state.firstWord);\n      this.props.setLast(this.state.lastWord);\n      this.props.setDate(this.state.date);\n    };\n\n    this.input = () => {\n      if (this.state.input) {\n        return /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"date\",\n            children: \"Enter Date of Receipt\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 122,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            id: \"date\",\n            placeholder: \"mm/dd/yy\",\n            name: \"text\",\n            onChange: this.onDateChange,\n            value: this.state.date\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 123,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"word\",\n            children: \"Enter Characters Before Your Item\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 131,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            id: \"word\",\n            placeholder: \"Before Item\",\n            name: \"text\",\n            onChange: this.onWordChange,\n            value: this.state.firstWord\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 132,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"word\",\n            children: \"Enter Characters After Your Total\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 140,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            id: \"lastword\",\n            placeholder: \"After Total\",\n            name: \"text\",\n            onChange: this.onLastChange,\n            value: this.state.lastWord\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 141,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: this.enterInfo,\n            children: \"Enter Information \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 149,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true);\n      }\n    };\n  }\n\n  render() {\n    if (!this.props.isVisible) {\n      return null;\n    } else {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"file\",\n            id: \"image\",\n            onChange: this.onFileChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 162,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: this.onFileUpload,\n            children: \"Upload!\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 163,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 161,\n          columnNumber: 11\n        }, this), this.input(), this.fileImage()]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 160,\n        columnNumber: 9\n      }, this);\n    }\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/abdulrehman/Desktop/capstone/client/src/Components/Receipt/Receipt.js"],"names":["React","Component","app","App","state","selectedFile","ulink","date","firstWord","lastWord","input","onFileChange","event","setState","target","files","onDateChange","value","onWordChange","onLastChange","onFileUpload","formData","FormData","append","name","console","log","file","document","getElementById","storageRef","storage","ref","task","put","then","snapshot","getDownloadURL","url","props","setURL","fileData","type","lastModifiedDate","toDateString","fileImage","enterInfo","preventDefault","setItem","setLast","setDate","render","isVisible"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport app from '../../firebase.js'\n\nclass App extends Component {\n  state = {\n    // Initially, no file is selected\n    selectedFile: null,\n    ulink: null,\n    date: '',\n    firstWord: '',\n    lastWord: '',\n    input: false,\n  }\n\n  // On file select (from the pop up)\n  onFileChange = (event) => {\n    // Update the state\n    this.setState({ selectedFile: event.target.files[0] })\n  }\n\n  // getting the date from the user\n\n  onDateChange = (event) => {\n    //update the state\n    this.setState({ date: event.target.value })\n  }\n\n  // getting the firstWord from the user\n\n  onWordChange = (event) => {\n    //update the state\n    this.setState({ firstWord: event.target.value })\n  }\n  // getting the lastWord from the user\n\n  onLastChange = (event) => {\n    //update the state\n    this.setState({ lastWord: event.target.value })\n  }\n\n  // On file upload (click the upload button)\n  onFileUpload = () => {\n    this.setState({ input: true })\n    // Create an object of formData\n    const formData = new FormData()\n\n    // Update the formData object\n    formData.append(\n      'myFile',\n      this.state.selectedFile,\n      this.state.selectedFile.name\n    )\n\n    // Details of the uploaded file\n    console.log(this.state.selectedFile)\n\n    // Get File\n    let file = document.getElementById('image').files[0]\n\n    // Create a storage ref\n\n    let storageRef = app.storage().ref('images/' + file.name)\n\n    //Upload file\n\n    let task = storageRef.put(file)\n\n    // get the URL\n    task\n      .then((snapshot) => snapshot.ref.getDownloadURL())\n      .then((url) =>\n        this.setState(\n          { ulink: url },\n          // passing back the url to the parent\n          this.props.setURL(url)\n        )\n      )\n  }\n\n  // File content to be displayed after\n  // file upload is complete\n  fileData = () => {\n    if (this.state.selectedFile) {\n      return (\n        <div>\n          <h2>File Details:</h2>\n          <p>File Name: {this.state.selectedFile.name}</p>\n          <p>File Type: {this.state.selectedFile.type}</p>\n          <p>\n            Last Modified:{' '}\n            {this.state.selectedFile.lastModifiedDate.toDateString()}\n          </p>\n        </div>\n      )\n    } else {\n      return (\n        <div>\n          <br />\n          <h4>Choose before Pressing the Upload button</h4>\n        </div>\n      )\n    }\n  }\n  // upload image if url is existent\n  fileImage = () => {\n    // rendering picture if it exists\n    if (this.state.ulink) {\n      return <img src={this.state.ulink} alt='upload' />\n    }\n  }\n  enterInfo = (event) => {\n    event.preventDefault()\n    this.props.setItem(this.state.firstWord)\n    this.props.setLast(this.state.lastWord)\n    this.props.setDate(this.state.date)\n  }\n\n  input = () => {\n    if (this.state.input) {\n      return (\n        <>\n          <label htmlFor='date'>Enter Date of Receipt</label>\n          <input\n            type='text'\n            id='date'\n            placeholder='mm/dd/yy'\n            name='text'\n            onChange={this.onDateChange}\n            value={this.state.date}\n          />\n          <label htmlFor='word'>Enter Characters Before Your Item</label>\n          <input\n            type='text'\n            id='word'\n            placeholder='Before Item'\n            name='text'\n            onChange={this.onWordChange}\n            value={this.state.firstWord}\n          />\n          <label htmlFor='word'>Enter Characters After Your Total</label>\n          <input\n            type='text'\n            id='lastword'\n            placeholder='After Total'\n            name='text'\n            onChange={this.onLastChange}\n            value={this.state.lastWord}\n          />\n          <button onClick={this.enterInfo}>Enter Information </button>\n        </>\n      )\n    }\n  }\n\n  render() {\n    if (!this.props.isVisible) {\n      return null\n    } else {\n      return (\n        <div>\n          <div>\n            <input type='file' id='image' onChange={this.onFileChange} />\n            <button onClick={this.onFileUpload}>Upload!</button>\n          </div>\n          {this.input()}\n          {this.fileImage()}\n        </div>\n      )\n    }\n  }\n}\n\nexport default App\n"]},"metadata":{},"sourceType":"module"}