{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/abdulrehman/Desktop/capstone/client/src/Components/Tesseract/Tesseract.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport { createWorker } from 'tesseract.js';\nimport axios from 'axios';\nimport './Tesseract.scss';\n\nfunction Tesseract({\n  isVisible,\n  URL\n}) {\n  _s();\n\n  const worker = createWorker({\n    logger: m => console.log(m)\n  });\n\n  const doOCR = async () => {\n    await worker.load();\n    await worker.loadLanguage('eng');\n    await worker.initialize('eng');\n    const {\n      data: {\n        text\n      }\n    } = await worker.recognize(URL);\n    setOcr(text);\n  };\n\n  const [ocr, setOcr] = useState('Recognizing...');\n  useEffect(() => {\n    doOCR();\n  });\n  axios.post('http://localhost:8080/tesseract', {\n    text: ocr\n  });\n\n  const handleInputChange = event => {\n    const target = event.target;\n    let value = target.value;\n    const name = target.name;\n  };\n\n  if (isVisible) {\n    return null;\n  } else {\n    return /*#__PURE__*/_jsxDEV(\"form\", {\n      className: \"tesseract\",\n      children: /*#__PURE__*/_jsxDEV(\"input\", {\n        autocomplete: \"off\",\n        className: \"tesseract__input\",\n        type: \"text\",\n        name: \"tesseract\",\n        id: \"tesseract\",\n        value: ocr,\n        onChange: handleInputChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this);\n  }\n}\n\n_s(Tesseract, \"wC2lgUhOs1inAMGMoDOFIxAb+lI=\");\n\n_c = Tesseract;\nexport default Tesseract;\n\nvar _c;\n\n$RefreshReg$(_c, \"Tesseract\");","map":{"version":3,"sources":["/Users/abdulrehman/Desktop/capstone/client/src/Components/Tesseract/Tesseract.js"],"names":["React","useEffect","useState","createWorker","axios","Tesseract","isVisible","URL","worker","logger","m","console","log","doOCR","load","loadLanguage","initialize","data","text","recognize","setOcr","ocr","post","handleInputChange","event","target","value","name"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,SAASC,YAAT,QAA6B,cAA7B;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAO,kBAAP;;AAEA,SAASC,SAAT,CAAmB;AAAEC,EAAAA,SAAF;AAAaC,EAAAA;AAAb,CAAnB,EAAuC;AAAA;;AACrC,QAAMC,MAAM,GAAGL,YAAY,CAAC;AAC1BM,IAAAA,MAAM,EAAGC,CAAD,IAAOC,OAAO,CAACC,GAAR,CAAYF,CAAZ;AADW,GAAD,CAA3B;;AAGA,QAAMG,KAAK,GAAG,YAAY;AACxB,UAAML,MAAM,CAACM,IAAP,EAAN;AACA,UAAMN,MAAM,CAACO,YAAP,CAAoB,KAApB,CAAN;AACA,UAAMP,MAAM,CAACQ,UAAP,CAAkB,KAAlB,CAAN;AACA,UAAM;AACJC,MAAAA,IAAI,EAAE;AAAEC,QAAAA;AAAF;AADF,QAEF,MAAMV,MAAM,CAACW,SAAP,CAAiBZ,GAAjB,CAFV;AAGAa,IAAAA,MAAM,CAACF,IAAD,CAAN;AACD,GARD;;AASA,QAAM,CAACG,GAAD,EAAMD,MAAN,IAAgBlB,QAAQ,CAAC,gBAAD,CAA9B;AACAD,EAAAA,SAAS,CAAC,MAAM;AACdY,IAAAA,KAAK;AACN,GAFQ,CAAT;AAIAT,EAAAA,KAAK,CAACkB,IAAN,CAAW,iCAAX,EAA8C;AAC5CJ,IAAAA,IAAI,EAAEG;AADsC,GAA9C;;AAIA,QAAME,iBAAiB,GAAIC,KAAD,IAAW;AACnC,UAAMC,MAAM,GAAGD,KAAK,CAACC,MAArB;AACA,QAAIC,KAAK,GAAGD,MAAM,CAACC,KAAnB;AACA,UAAMC,IAAI,GAAGF,MAAM,CAACE,IAApB;AACD,GAJD;;AAMA,MAAIrB,SAAJ,EAAe;AACb,WAAO,IAAP;AACD,GAFD,MAEO;AACL,wBACE;AAAM,MAAA,SAAS,EAAC,WAAhB;AAAA,6BACE;AACE,QAAA,YAAY,EAAC,KADf;AAEE,QAAA,SAAS,EAAC,kBAFZ;AAGE,QAAA,IAAI,EAAC,MAHP;AAIE,QAAA,IAAI,EAAC,WAJP;AAKE,QAAA,EAAE,EAAC,WALL;AAME,QAAA,KAAK,EAAEe,GANT;AAOE,QAAA,QAAQ,EAAEE;AAPZ;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YADF;AAaD;AACF;;GA7CQlB,S;;KAAAA,S;AA+CT,eAAeA,SAAf","sourcesContent":["import React, { useEffect, useState } from 'react'\nimport { createWorker } from 'tesseract.js'\nimport axios from 'axios'\nimport './Tesseract.scss'\n\nfunction Tesseract({ isVisible, URL }) {\n  const worker = createWorker({\n    logger: (m) => console.log(m),\n  })\n  const doOCR = async () => {\n    await worker.load()\n    await worker.loadLanguage('eng')\n    await worker.initialize('eng')\n    const {\n      data: { text },\n    } = await worker.recognize(URL)\n    setOcr(text)\n  }\n  const [ocr, setOcr] = useState('Recognizing...')\n  useEffect(() => {\n    doOCR()\n  })\n\n  axios.post('http://localhost:8080/tesseract', {\n    text: ocr,\n  })\n\n  const handleInputChange = (event) => {\n    const target = event.target\n    let value = target.value\n    const name = target.name\n  }\n\n  if (isVisible) {\n    return null\n  } else {\n    return (\n      <form className='tesseract'>\n        <input\n          autocomplete='off'\n          className='tesseract__input'\n          type='text'\n          name='tesseract'\n          id='tesseract'\n          value={ocr}\n          onChange={handleInputChange}\n        />\n      </form>\n    )\n  }\n}\n\nexport default Tesseract\n"]},"metadata":{},"sourceType":"module"}