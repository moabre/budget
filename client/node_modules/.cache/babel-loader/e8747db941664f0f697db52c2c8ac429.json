{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/abdulrehman/Desktop/capstone/client/src/Components/Receipt/Receipt.js\";\nimport axios from 'axios';\nimport React, { Component } from 'react';\nimport app from '../../firebase.js';\n\nclass App extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      // Initially, no file is selected\n      selectedFile: null\n    };\n\n    this.onFileChange = event => {\n      // Update the state\n      this.setState({\n        selectedFile: event.target.files[0]\n      });\n    };\n\n    this.onFileUpload = () => {\n      // Create an object of formData\n      const formData = new FormData(); // Update the formData object\n\n      formData.append('myFile', this.state.selectedFile, this.state.selectedFile.name); // Details of the uploaded file\n\n      console.log(this.state.selectedFile); // Request made to the backend api\n      // Send formData object\n\n      axios.post('api/uploadfile', formData); // Get File\n\n      let file = document.getElementById('image').files[0]; // Create a storage ref\n\n      let storageRef = app.storage().ref('image/' + file.name);\n    };\n\n    this.fileData = () => {\n      if (this.state.selectedFile) {\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            children: \"File Details:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"File Name: \", this.state.selectedFile.name]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"File Type: \", this.state.selectedFile.type]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Last Modified:\", ' ', this.state.selectedFile.lastModifiedDate.toDateString()]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 9\n        }, this);\n      } else {\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n            children: \"Choose before Pressing the Upload button\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 9\n        }, this);\n      }\n    };\n  }\n\n  render() {\n    if (!this.props.isVisible) {\n      return null;\n    } else {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"file\",\n            id: \"image\",\n            onChange: this.onFileChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: this.onFileUpload,\n            children: \"Upload!\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 11\n        }, this), this.fileData()]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 9\n      }, this);\n    }\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/abdulrehman/Desktop/capstone/client/src/Components/Receipt/Receipt.js"],"names":["axios","React","Component","app","App","state","selectedFile","onFileChange","event","setState","target","files","onFileUpload","formData","FormData","append","name","console","log","post","file","document","getElementById","storageRef","storage","ref","fileData","type","lastModifiedDate","toDateString","render","props","isVisible"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,GAAP,MAAgB,mBAAhB;;AAEA,MAAMC,GAAN,SAAkBF,SAAlB,CAA4B;AAAA;AAAA;AAAA,SAC1BG,KAD0B,GAClB;AACN;AACAC,MAAAA,YAAY,EAAE;AAFR,KADkB;;AAAA,SAO1BC,YAP0B,GAOVC,KAAD,IAAW;AACxB;AACA,WAAKC,QAAL,CAAc;AAAEH,QAAAA,YAAY,EAAEE,KAAK,CAACE,MAAN,CAAaC,KAAb,CAAmB,CAAnB;AAAhB,OAAd;AACD,KAVyB;;AAAA,SAa1BC,YAb0B,GAaX,MAAM;AACnB;AACA,YAAMC,QAAQ,GAAG,IAAIC,QAAJ,EAAjB,CAFmB,CAInB;;AACAD,MAAAA,QAAQ,CAACE,MAAT,CACE,QADF,EAEE,KAAKV,KAAL,CAAWC,YAFb,EAGE,KAAKD,KAAL,CAAWC,YAAX,CAAwBU,IAH1B,EALmB,CAWnB;;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAY,KAAKb,KAAL,CAAWC,YAAvB,EAZmB,CAcnB;AACA;;AACAN,MAAAA,KAAK,CAACmB,IAAN,CAAW,gBAAX,EAA6BN,QAA7B,EAhBmB,CAkBnB;;AACA,UAAIO,IAAI,GAAGC,QAAQ,CAACC,cAAT,CAAwB,OAAxB,EAAiCX,KAAjC,CAAuC,CAAvC,CAAX,CAnBmB,CAqBnB;;AAEA,UAAIY,UAAU,GAAGpB,GAAG,CAACqB,OAAJ,GAAcC,GAAd,CAAkB,WAAWL,IAAI,CAACJ,IAAlC,CAAjB;AACD,KArCyB;;AAAA,SAyC1BU,QAzC0B,GAyCf,MAAM;AACf,UAAI,KAAKrB,KAAL,CAAWC,YAAf,EAA6B;AAC3B,4BACE;AAAA,kCACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,eAEE;AAAA,sCAAe,KAAKD,KAAL,CAAWC,YAAX,CAAwBU,IAAvC;AAAA;AAAA;AAAA;AAAA;AAAA,kBAFF,eAGE;AAAA,sCAAe,KAAKX,KAAL,CAAWC,YAAX,CAAwBqB,IAAvC;AAAA;AAAA;AAAA;AAAA;AAAA,kBAHF,eAIE;AAAA,yCACiB,GADjB,EAEG,KAAKtB,KAAL,CAAWC,YAAX,CAAwBsB,gBAAxB,CAAyCC,YAAzC,EAFH;AAAA;AAAA;AAAA;AAAA;AAAA,kBAJF;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF;AAWD,OAZD,MAYO;AACL,4BACE;AAAA,kCACE;AAAA;AAAA;AAAA;AAAA,kBADF,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF;AAMD;AACF,KA9DyB;AAAA;;AAgE1BC,EAAAA,MAAM,GAAG;AACP,QAAI,CAAC,KAAKC,KAAL,CAAWC,SAAhB,EAA2B;AACzB,aAAO,IAAP;AACD,KAFD,MAEO;AACL,0BACE;AAAA,gCACE;AAAA,kCACE;AAAO,YAAA,IAAI,EAAC,MAAZ;AAAmB,YAAA,EAAE,EAAC,OAAtB;AAA8B,YAAA,QAAQ,EAAE,KAAKzB;AAA7C;AAAA;AAAA;AAAA;AAAA,kBADF,eAEE;AAAQ,YAAA,OAAO,EAAE,KAAKK,YAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,EAKG,KAAKc,QAAL,EALH;AAAA;AAAA;AAAA;AAAA;AAAA,cADF;AASD;AACF;;AA9EyB;;AAiF5B,eAAetB,GAAf","sourcesContent":["import axios from 'axios'\nimport React, { Component } from 'react'\nimport app from '../../firebase.js'\n\nclass App extends Component {\n  state = {\n    // Initially, no file is selected\n    selectedFile: null,\n  }\n\n  // On file select (from the pop up)\n  onFileChange = (event) => {\n    // Update the state\n    this.setState({ selectedFile: event.target.files[0] })\n  }\n\n  // On file upload (click the upload button)\n  onFileUpload = () => {\n    // Create an object of formData\n    const formData = new FormData()\n\n    // Update the formData object\n    formData.append(\n      'myFile',\n      this.state.selectedFile,\n      this.state.selectedFile.name\n    )\n\n    // Details of the uploaded file\n    console.log(this.state.selectedFile)\n\n    // Request made to the backend api\n    // Send formData object\n    axios.post('api/uploadfile', formData)\n\n    // Get File\n    let file = document.getElementById('image').files[0]\n\n    // Create a storage ref\n\n    let storageRef = app.storage().ref('image/' + file.name)\n  }\n\n  // File content to be displayed after\n  // file upload is complete\n  fileData = () => {\n    if (this.state.selectedFile) {\n      return (\n        <div>\n          <h2>File Details:</h2>\n          <p>File Name: {this.state.selectedFile.name}</p>\n          <p>File Type: {this.state.selectedFile.type}</p>\n          <p>\n            Last Modified:{' '}\n            {this.state.selectedFile.lastModifiedDate.toDateString()}\n          </p>\n        </div>\n      )\n    } else {\n      return (\n        <div>\n          <br />\n          <h4>Choose before Pressing the Upload button</h4>\n        </div>\n      )\n    }\n  }\n\n  render() {\n    if (!this.props.isVisible) {\n      return null\n    } else {\n      return (\n        <div>\n          <div>\n            <input type='file' id='image' onChange={this.onFileChange} />\n            <button onClick={this.onFileUpload}>Upload!</button>\n          </div>\n          {this.fileData()}\n        </div>\n      )\n    }\n  }\n}\n\nexport default App\n"]},"metadata":{},"sourceType":"module"}